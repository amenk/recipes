{
    "manifests": {
        "shopware/storefront": {
            "manifest": {
                "bundles": {
                    "Shopware\\Storefront\\Storefront": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "bin/": "%BIN_DIR%/"
                },
                "env": {
                    "STOREFRONT_PROXY_URL": "http://localhost",
                    "SHOPWARE_HTTP_CACHE_ENABLED": "1",
                    "SHOPWARE_HTTP_DEFAULT_TTL": "7200"
                }
            },
            "files": {
                "bin/build-storefront.sh": {
                    "contents": [
                        "#!/usr/bin/env bash",
                        "",
                        "CWD=\"$(cd -P -- \"$(dirname -- \"${BASH_SOURCE[0]}\")\" && pwd -P)\"",
                        "",
                        "set -euo pipefail",
                        "",
                        "#new stuff",
                        "",
                        "export PROJECT_ROOT=\"${PROJECT_ROOT:-\"$(dirname \"$CWD\")\"}\"",
                        "STOREFRONT_ROOT=\"${STOREFRONT_ROOT:-\"${PROJECT_ROOT}/vendor/shopware/storefront\"}\"",
                        "",
                        "BIN_TOOL=\"${CWD}/console\"",
                        "",
                        "if [[ ${CI-\"\"} ]]; then",
                        "    BIN_TOOL=\"${CWD}/ci\"",
                        "    chmod +x \"$BIN_TOOL\"",
                        "fi",
                        "",
                        "# build storefront",
                        "[[ ${SHOPWARE_SKIP_BUNDLE_DUMP-\"\"} ]] || \"${BIN_TOOL}\" bundle:dump",
                        "DATABASE_URL=\"\" \"${BIN_TOOL}\" feature:dump",
                        "",
                        "if [[ $(command -v jq) ]]; then",
                        "    OLDPWD=$(pwd)",
                        "    cd \"$PROJECT_ROOT\" || exit",
                        "",
                        "    jq -c '.[]' \"var/plugins.json\" | while read -r config; do",
                        "        srcPath=$(echo \"$config\" | jq -r '(.basePath + .storefront.path)')",
                        "",
                        "        # the package.json files are always one upper",
                        "        path=$(dirname \"$srcPath\")",
                        "        name=$(echo \"$config\" | jq -r '.technicalName' )",
                        "",
                        "        if [[ -f \"$path/package.json\" && ! -d \"$path/node_modules\" && $name != \"storefront\" ]]; then",
                        "            echo \"=> Installing npm dependencies for ${name}\"",
                        "",
                        "            if [[ -f \"$path/package-lock.json\" ]]; then",
                        "                npm clean-install --prefix \"$path\"",
                        "            else",
                        "                npm install --prefix \"$path\"",
                        "            fi",
                        "        fi",
                        "    done",
                        "    cd \"$OLDPWD\" || exit",
                        "else",
                        "    echo \"Cannot check extensions for required npm installations as jq is not installed\"",
                        "fi",
                        "",
                        "npm --prefix \"${STOREFRONT_ROOT}\"/Resources/app/storefront clean-install",
                        "node \"${STOREFRONT_ROOT}\"/Resources/app/storefront/copy-to-vendor.js",
                        "npm --prefix \"${STOREFRONT_ROOT}\"/Resources/app/storefront run production",
                        "[[ ${SHOPWARE_SKIP_ASSET_COPY-\"\"} ]] ||\"${BIN_TOOL}\" asset:install",
                        "[[ ${SHOPWARE_SKIP_THEME_COMPILE-\"\"} ]] || \"${BIN_TOOL}\" theme:compile",
                        ""
                    ],
                    "executable": true
                },
                "bin/watch-storefront.sh": {
                    "contents": [
                        "#!/usr/bin/env bash",
                        "",
                        "CWD=\"$(cd -P -- \"$(dirname -- \"${BASH_SOURCE[0]}\")\" && pwd -P)\"",
                        "",
                        "export PROJECT_ROOT=\"${PROJECT_ROOT:-\"$(dirname \"$CWD\")\"}\"",
                        "export ENV_FILE=${ENV_FILE:-\"${PROJECT_ROOT}/.env\"}",
                        "",
                        "source \"${ENV_FILE}\"",
                        "export APP_URL",
                        "export STOREFRONT_PROXY_PORT",
                        "export ESLINT_DISABLE",
                        "",
                        "\"${CWD}\"/console theme:compile",
                        "\"${CWD}\"/console theme:dump",
                        "npm --prefix vendor/shopware/storefront/Resources/app/storefront/ run-script hot-proxy",
                        ""
                    ],
                    "executable": true
                }
            },
            "ref": "7aaaccca1dc3d371e9e98988fd69fee5f5d60c74"
        }
    }
}
